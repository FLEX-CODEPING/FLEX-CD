# Namespace where the application will be deployed
namespace: gateway-service

# Replica count for the deployment
replicaCount: 2

# Image settings
image:
  repository: flexcodeping/flex-be-prod-gateway
  tag: 13
  pullPolicy: IfNotPresent  # Image pull policy

service:
  type: NodePort 
  port: 8080

# Pod annotations (optional)
podAnnotations: {}

# Pod labels (optional)
podLabels: {}

# Resource requests and limits
resources:
  requests:
    memory: "512Mi"
    cpu: "250m"
  limits:
    memory: "1Gi"
    cpu: "500m"

# Liveness probe configuration
livenessProbe:
  enabled: true
  initialDelaySeconds: 10
  periodSeconds: 10

# Readiness probe configuration
readinessProbe:
  enabled: true
  initialDelaySeconds: 10
  periodSeconds: 5

# Node selector for scheduling pods on specific nodes
nodeSelector:
  app: gateway-service

# Affinity rules for pod scheduling (optional)
affinity: {}

# Tolerations for scheduling pods on tainted nodes (optional)
tolerations: []

# Volume mounts configuration (optional)
volumeMounts:
  - name: my-volume
    mountPath: /path/in/container

# Volumes configuration (optional)
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []

# Service account settings
serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

# Ingress settings
# TODO : DNS 주소로 수정 필요
ingress:
  enabled: false 
  className: nginx 
  annotations:
    kubernetes.io/ingress.class: "nginx"  
  hosts:
    - host: "do-flex.co.kr"  
      paths:
        - path: /
          pathType: Prefix  
  tls:
    - hosts:
        - "172.16.212.102"  
      secretName: my-tls-secret 

# config settings
config:
  AI_SERVER_URL: "https://jdmphmtrawtjxatf.tunnel-pt.elice.io"
  EUREKA_PASSWORD: "codeping1!"
  EUREKA_SERVICE_URL: "http://admin:codeping1!@172.16.212.30:8761/eureka/"
  EUREKA_USERNAME: "admin"
  FLEX_USER_SERVICE_DOMAIN: "http://172.16.212.106:8081"
  JWT_ACCESS_EXPIRATION: "1209600"
  JWT_REFRESH_EXPIRATION: "1800"
  JWT_SECRET_KEY: "943cb527164de7a08667b48ae9279a3888545bdcb83f1da6d178370eb015aecb"
  SWAGGER_SERVER_URL: "http://172.16.212.102:8080"

# auto scailing settings
autoscaling:
  enabled: false # 또는 true로 설정하여 활성화
  minReplicas: 1
  maxReplicas: 10     

# # Default values for gateway-service.
# # This is a YAML-formatted file.
# # Declare variables to be passed into your templates.

# # This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
# replicaCount: 1

# # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
# image:
#   repository: nginx
#   # This sets the pull policy for images.
#   pullPolicy: IfNotPresent
#   # Overrides the image tag whose default is the chart appVersion.
#   tag: 13

# # This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
# imagePullSecrets: []
# # This is to override the chart name.
# nameOverride: ""
# fullnameOverride: ""

# #This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
# serviceAccount:
#   # Specifies whether a service account should be created
#   create: true
#   # Automatically mount a ServiceAccount's API credentials?
#   automount: true
#   # Annotations to add to the service account
#   annotations: {}
#   # The name of the service account to use.
#   # If not set and create is true, a name is generated using the fullname template
#   name: ""

# # This is for setting Kubernetes Annotations to a Pod.
# # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ 
# podAnnotations: {}
# # This is for setting Kubernetes Labels to a Pod.
# # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
# podLabels: {}

# podSecurityContext: {}
#   # fsGroup: 2000

# securityContext: {}
#   # capabilities:
#   #   drop:
#   #   - ALL
#   # readOnlyRootFilesystem: true
#   # runAsNonRoot: true
#   # runAsUser: 1000

# # This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
# service:
#   # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
#   type: ClusterIP
#   # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
#   port: 80

# # This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
# ingress:
#   enabled: false
#   className: ""
#   annotations: {}
#     # kubernetes.io/ingress.class: nginx
#     # kubernetes.io/tls-acme: "true"
#   hosts:
#     - host: chart-example.local
#       paths:
#         - path: /
#           pathType: ImplementationSpecific
#   tls: []
#   #  - secretName: chart-example-tls
#   #    hosts:
#   #      - chart-example.local

# resources: {}
#   # We usually recommend not to specify default resources and to leave this as a conscious
#   # choice for the user. This also increases chances charts run on environments with little
#   # resources, such as Minikube. If you do want to specify resources, uncomment the following
#   # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
#   # limits:
#   #   cpu: 100m
#   #   memory: 128Mi
#   # requests:
#   #   cpu: 100m
#   #   memory: 128Mi

# # This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
# livenessProbe:
#   httpGet:
#     path: /
#     port: http
# readinessProbe:
#   httpGet:
#     path: /
#     port: http

# #This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
# autoscaling:
#   enabled: false
#   minReplicas: 1
#   maxReplicas: 100
#   targetCPUUtilizationPercentage: 80
#   # targetMemoryUtilizationPercentage: 80

# # Additional volumes on the output Deployment definition.
# volumes: []
# # - name: foo
# #   secret:
# #     secretName: mysecret
# #     optional: false

# # Additional volumeMounts on the output Deployment definition.
# volumeMounts: []
# # - name: foo
# #   mountPath: "/etc/foo"
# #   readOnly: true

# nodeSelector: {}

# tolerations: []

# affinity: {}
